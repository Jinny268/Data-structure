<해싱>

1. 해싱에 대해서..
 - [핵심] 해싱은 O(log n) 시간보다 빠른 연산을 위해, 키와 1차원 리스트의 인덱스의 관계를 이용하여 키(원소)를 저장한다.
 - 키를 배열의 인덱스로 그대로 사용하면 메모리 낭비가 심해질 수 있다.
 - [문제 해결 방안] 키를 변환하여 배열의 인덱스로 사용한다.
 - 키를 간단한 함수를 사용해 변환한 값을 배열의 인덱스로 이용하여 원소를 저장하는 것을 해싱이라고 한다.
 - 해싱에 사용되는 함수를 해시함수라고 한다.
 - 해시함수가 계산한 값을 해시값 또는 해시주소라고 한다.
 - 항목이 해시값에 따라 저장되는 배열을 해시테이블이라고 한다.

2. 해싱의 문제점
 - 아무리 우수한 해시함수를 사용하더라도, 2개 이상의 원소를 해시테이블의 동일한 곳에 저장하는 경우가 발생한다.
 - 서로 다른 키들이 동일한 해시값을 가질 때 충돌이 발생한다.

3. 해시함수
 - 가장 이상적인 해시함수는 키들을 균등하게 해시테이블의 인덱스로 변환하는 함수이다.
 - 일반적으로 키들은 부여된 의미나 특성을 가지므로 키의 가장 앞 부분 또는 뒤의 몇 자리 등을 취하여 해시값으로 사용하는 방식의 해시함수는 많은 충돌을 야기한다.
 - 균등하게 변환한다는 것은 키들을 해시테이블에 랜덤하게 흩어지도록 저장하는 것을 뜻한다.
 - 해시함수는 키들을 균등하게 해시테이블의 인덱스로 변환하기 위해 의미가 부여되어 있는 키를 간단한 계산을 통해 뒤죽박죽으로 만든 후 해시테이블의 크기에 맞도록 해시값을 계산한다.
- 아무리 균등한 결과를 보장하는 해시함수라도 함수 계산 자체에 긴 시간이 소요된다면 해싱의 장점인 연산의 신속성을 상실하므로 그 가치를 잃는다.
